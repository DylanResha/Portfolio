     1                                  ; Dylan Resha
     2                                  ; Assignment 4 fibonacci Sequence
     3                                  ; 10/02/2020
     4                                  ; Write assembly language code that, using the first two digits of the fibonacci sequence calculates and adds the first 16 values of fibonacci together  
     5                                  ;Manually assign the first two Fibonacci numbers to your array Fibs.
     6                                  ;Calculate the 14 missing Fibs, and place them in the correct location of Fibs.
     7                                  ;Place the label “done:” after the Fibs array is completed, and before normal termination.
     8                                  ;You may do this manually, or, look ahead and use a loop.  The loop is not required.
     9                                   
    10                                  
    11                                  SECTION .data
    12                                  ; define data/variables here.  Think DB, DW, DD, DQ
    13                                  
    14                                  
    15                                  SECTION .bss
    16                                  ; define uninitialized data here
    17 00000000 <res 00000040>          Fibs: RESD 16
    18                                  
    19                                  SECTION .text
    20                                  global _main
    21                                  _main:
    22                                  ; put your code here
    23 00000000 B800000000               mov eax, 0
    24 00000005 A3[00000000]             mov [Fibs], eax
    25 0000000A B801000000               mov eax, 1
    26 0000000F A3[02000000]             mov [Fibs+2], eax
    27 00000014 BB00000000               mov ebx,0
    28                                  
    29                                   top:
    30 00000019 83FB0E                   cmp ebx,14
    31 0000001C 7D1A                     jge done
    32                                  
    33 0000001E 8B941B[00000000]           mov edx,[Fibs+ebx*2]
    34 00000025 43                              inc ebx
    35                                  b1:
    36 00000026 03941B[00000000]           add edx,[Fibs+ebx*2]
    37                                  b2:
    38 0000002D 43                              inc ebx
    39 0000002E 89941B[00000000]           mov [Fibs+ebx*2],edx
    40 00000035 4B                              dec ebx
    41 00000036 EBE1                      jmp top
    42                                  
    43                                  done:
    44                                  ; Normal termination code
    45 00000038 B801000000              mov eax, 1
    46 0000003D BB00000000              mov ebx, 0
    47 00000042 CD80                    int 80h
